gme.proc.getPOWoffer=POD_POW.POW_WEB_UTIL.sp_get_gme_pow_offers
cirro.proc.getPOWoffer=POD_POW.POW_WEB_UTIL.sp_get_cirro_pow_offers
reliant.proc.getPOWoffer=POD_POW.POW_WEB_UTIL.sp_get_reliant_pow_offers
proc.getsrvcreqdetails=SPK_GET_SERVREQDETAILS.GET_SERVREQDETAILS
sqlQuery.getPendingRequestDetails=select REP_CD, SERVICE_START_DATE, CREATION_DATE from choice.service_location where TRACKING_NUMBER={0}
sqlQuery.getPreviousProviderName=select DESCRIPTION from choice.REP where REP_CD={0}

# Online Affiliate changes:
proc.addservicelocation = spk_choice_manage.srvc_location_affiliate_add
proc.updateservicelocation = spk_choice_manage.srvc_location_affiliate_upd
query.sequence.nextVal =select {0}.nextval id from dual
proc.addperson = spk_choice_manage.person_affiliate_add
proc.updateperson = spk_choice_manage.person_affiliate_upd
query.get.personAffiliate.id.by.trackingNo=select person_id from choice.service_location_affiliate where tracking_number=?
query.get.personAffiliate.id.and.retrycount.by.trackingNo=select p.person_id as personId, p.retry_count as retryCount from choice.service_location_affiliate s, choice.person_affiliate p where s.tracking_number=? and s.person_id=p.person_id
query.get.esidCount.sqlQuery=select count(*) as count from esi.esi_type_status where esiid = {0}
query.get.esidType.sqlQuery=SELECT ESIID,STATUS,PREMISE_TYPE FROM ESI.ESI_TYPE_STATUS WHERE (PREMISE_TYPE = ''Residential'' AND (STATUS IS NULL OR STATUS IN (''De-Energized'',''Active''))) AND ESIID = {0}
query.get.personAffiliate.details.by.personId=select * from choice.person_affiliate where person_id=?
query.get.serviceLocationAffiliate.details.by.trackingId=select * from choice.service_location_affiliate where tracking_number=?
query.get.enrollment.details.by.trackingId.guid=select * from choice.service_location_affiliate s, choice.person_affiliate p where s.tracking_number=? and s.guid_id=? and s.person_id=p.person_id

#CHG0019468 Changes Start
query.get.user.id=SELECT OLACT.USER_LOGIN_ID FROM OL_CA OLCA,OL_ACCOUNT OLACT WHERE OLCA.USER_UNIQUE_ID=OLACT.USER_UNIQUE_ID AND OLCA.CONTRACT_ACCOUNT_NUMBER=?

#CHG0026183 Changes Start
# query.cirro.get.user.id=SELECT U.EMAIL FROM [CIRROCSS].[DBO].[CSS_USER_CSPS] AS C, [CIRROCSS].[DBO].[CSS_USERS] AS U WHERE C.CSS_USER_ID=U.CSS_USER_ID AND (C.CSP_ID=? OR C.CSP_ID= (replicate('0', 10 - len(?)) + cast (? as varchar)))
# Here 10 is the Numeric Precision of CSP_ID under table [CIRROCSS].[DBO].[CSS_USER_CSPS]
# query.cirro.get.user.id=SELECT U.EMAIL FROM [CIRROCSS].[DBO].[CSS_USER_CSPS] AS C, [CIRROCSS].[DBO].[CSS_USERS] AS U WHERE C.CSS_USER_ID=U.CSS_USER_ID AND (C.CSP_ID=? OR C.CSP_ID=?);
query.cirro.get.user.id=SELECT U.EMAIL FROM CSS_USER_CSPS AS C, CSS_USERS AS U WHERE C.CSS_USER_ID=U.CSS_USER_ID AND (C.CSP_ID=? OR C.CSP_ID=?);
SP_UPDATE_USER_DETAILS=CSLR_MAIN.PKG_CSLR_ONLINE_USER_ADD.SP_UPDATE_USER_DETAILS
db.tcs.ca.bp.from.leaseid = select cust.lease_id AS LEASE_ID, cust.bp AS BUSINESS_PARTNER_ID, cust.ca AS CONTRACT_ACCOUNT_NUMBER, cust.cc AS COMPANY_CODE from tcs.SOLAR_CUSTOMER_TBL cust, tcs.SOLAR_PRODUCT prod where cust.lease_id = ? and cust.lease_id = prod.lease_id and cust.cc = prod.cc and CUST.CC IN(SELECT CC FROM tcs.SOLAR_PORTAL_COMPANY_CODE) and cust.term_date is null and prod.term_date is null and sysdate between prod.c_start and prod.c_end and cust.book_tranche = PROD.book_tranche and cust.book_tranche in (SELECT BOOK_TRANCHE FROM tcs.SOLAR_PORTAL_BOOK_TRANCHE)

sqlQuery.savePrivacyPreferenceSignUp=INSERT INTO SOLPREF.SOLICITATION_PREF (SMAIL_PREF_FLAG, PHONECALL_PREF_FLAG, EMAIL_PREF_FLAG, CUSTOMER_TYPE, BUSINESS_NAME, FIRST_NAME, LAST_NAME, ADDRESS_LN1, ADDRESS_LN2, CITY, STATE, ZIP_CD, PHONE_NUMBER, EMAIL_ADDRESS, COMPANY_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
# US-F222-DK-10312018-DK_MBAR
sqlquery.cpdb.payment.validation.log=SELECT cpdbpayrvlog.PAYMENT_VALIDATION_ACTIVE_ID,cpdbpayrvlog.CONTRACT_ACCOUNT_NUMBER,cpdbpayrvlog.PAYMENT_AMOUNT,cpdbpayrvlog.PAYMENT_DATE,cpdbpayrvlog.RECEIPT_NUMBER,cpdbpayrvlog.VENDOR_ID,cpdbpayrvlog.COMPANY_CODE,cpdbpayrvlog.SUCCESS_SHORT_MESSAGE,cpdbpayrvlog.CPDB_CREATION_DATE,cpdbpayrvlog.CPDB_UPDATE_DATE FROM    cpdb1_main.PAYMENT_RECEIPT_VALIDATION_LOG cpdbpayrvlog WHERE  cpdbpayrvlog.CONTRACT_ACCOUNT_NUMBER = :contract_account_number and cpdbpayrvlog.COMPANY_CODE =:company_code AND cpdbpayrvlog.CPDB_CREATION_DATE >= (SYSDATE - 2) ORDER BY CPDB_CREATION_DATE DESC FETCH FIRST 1 ROWS ONLY
# US-F222-DK-10312018-DK_MBAR

#CONTENT-API
query.get.all.content=select CNTNT_ID, AREA, LANG, NAME, VALUE, CNTNT_VR_ID from gme_res_main.mobile_content where cntnt_vr_id = (select max(cntnt_vr_id) from gme_res_main.mobile_content)

query.gme.insert.password.tnx=INSERT INTO gme_res_main.OL_EXTERNAL_REQUEST (COMPANY_CODE, TRANSACTION_ID, USER_UNIQUE_ID, STATUS_FLAG,REQUEST_TYPE, EXPIRATION_DATE) VALUES ( ?, ?, ?, ?, ?, ?)
query.gme.update.password.status.code=UPDATE gme_res_main.ol_external_request set gme_res_main.ol_external_request.STATUS_FLAG='C' where  STATUS_FLAG='O' and gme_res_main.ol_external_request.user_unique_id = ( select distinct gme_res_main.Ol_ACCOUNT.user_unique_id from gme_res_main.OL_EXTERNAL_REQUEST , gme_res_main.Ol_ACCOUNT where gme_res_main.ol_external_request.user_unique_id = gme_res_main.Ol_ACCOUNT.user_unique_id and gme_res_main.Ol_ACCOUNT.USER_LOGIN_ID = ? and STATUS_FLAG='O')

query.gme.validate.password.link=SELECT to_char(expiration_date,'YYYY-MM-DD hh24:mi:ss') expiration_date FROM gme_res_main.OL_EXTERNAL_REQUEST WHERE  STATUS_FLAG='O' AND TRANSACTION_ID=?
query.get.user.login.id=select gme_res_main.Ol_ACCOUNT.USER_LOGIN_ID from gme_res_main.ol_external_request , gme_res_main.Ol_ACCOUNT where ol_external_request.user_unique_id = Ol_ACCOUNT.user_unique_id and ol_external_request.transaction_id=?

#WSE Email Archiving
query.get.wse.sqlQuery=SELECT EMAIL_FILE_NAME, EMAIL_SENT_DATE, EMAIL_ADDRESS, CONTRACT_ACCOUNT_NUMBER, VIEW_EMAIL_URL, CONTRACT_NUMBER FROM CPDB1_MAIN.SF_WSE_ARCHIVE WHERE CONTRACT_ACCOUNT_NUMBER = ? AND COMPANY_CODE = ? AND TRUNC(EMAIL_SENT_DATE) >= TRUNC(SYSDATE - ?) ORDER BY EMAIL_SENT_DATE DESC
db.choice.reliant.addkbadetailsquery=INSERT into CHOICE.KBA_API(KBA_TRANSACTION_KEY,DECISION,QUESTION_COUNT,IDENTITY_SCORE,OVERALL_SCORE,INTERACTIVE_QSCORE,FRAUD_LEVEL,SAP_RETURN_CODE,SAP_RETURN_MESSAGE,EQ_ERROR_CODE,EQ_ERROR_MESSAGE,REASON_CODE_LIST)values(?,?,?,?,?,?,?,?,?,?,?,?)

db.choice.reliant.updatekbadetailsquery =update CHOICE.KBA_API set DECISION =?,IDENTITY_SCORE=?,OVERALL_SCORE = ?,INTERACTIVE_QSCORE= ?,FRAUD_LEVEL=?,SAP_RETURN_CODE= ?,SAP_RETURN_MESSAGE= ?,EQ_ERROR_CODE= ?,EQ_ERROR_MESSAGE= ?,REASON_CODE_LIST= ? where KBA_TRANSACTION_KEY = ?
# PBI 15786: Update ESID Call || atiwari
proc.getesiidInfo=ESI.SPK_GET_ESI.get_esidetails
